<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.athome.feel.model.mapper.MemberMapper">

    <insert id="insertMember" parameterType="loginDto">
        insert into member (member_account_id, display_name, email)
        values (#{id}, #{displayName}, #{email})
    </insert>

    <select id="findByAccountId" parameterType="string" resultType="memberDto">
        select member_id, member_account_id, display_name, email, following, followers
        from member
        where member_account_id = #{accountId}
    </select>

    <select id="findByMemberId" parameterType="int" resultType="memberDto">
        select member_id, member_account_id, display_name, email, following, followers
        from member
        where member_id = #{accountId}
    </select>

    <select id="findByNameLike" parameterType="searchDto" resultType="memberDto">
        select member.member_id,
               member_account_id,
               display_name,
               email,
               following,
               followers,
               if(member.member_id in (select follow_id
                                       from follow
                                       where member_id = #{memberId}), true, false) follow
        from member
                 left join follow on follow.member_id = member.member_id
        where display_name like CONCAT('%', #{name}, '%')
          and member.member_id != #{memberId};
    </select>

    <select id="followCheck" parameterType="searchDto" resultType="int">

    </select>

    <select id="findFollowee" parameterType="int" resultType="memberDto">
        select member.member_id, member_account_id, display_name, email, following, followers
        from member
        where member.member_id in (
            select follow_id
            from follow
            where member_id = #{memberId});
    </select>

    <select id="findFollower" parameterType="int" resultType="memberDto">
        select member.member_id,
               member_account_id,
               display_name,
               email,
               following,
               followers,
               if(member.member_id in (select follow_id
                                       from follow
                                       where member_id = 1), true, false) follow
        from member
        where member.member_id in (
            select member_id
            from follow
            where follow_id = 1);
    </select>

    <insert id="follow" parameterType="map">
        insert into follow (member_id, follow_id)
        values (#{memberId}, #{followId})
    </insert>

    <update id="increaseFollower" parameterType="int">
        update member
        set followers = followers + 1
        where member_id = #{memberId}
    </update>

    <update id="increaseFollowing" parameterType="int">
        update member
        set following = following + 1
        where member_id = #{memberId}
    </update>

    <update id="decreaseFollower" parameterType="int">
        update member
        set followers = followers - 1
        where member_id = #{memberId}
    </update>

    <update id="decreaseFollowing" parameterType="int">
        update member
        set following = following - 1
        where member_id = #{memberId}
    </update>

    <delete id="deleteFollow" parameterType="map">
        delete
        from follow
        where member_id = #{memberId}
          and follow_id = #{followId}
    </delete>

    <select id="listLikeSongs" parameterType="int" resultType="MusicDto">
        select st.title, st.youtube_id
        from song st
                 inner join song_like sl on st.song_id = sl.song_id
        where member_id = #{memberId}
    </select>

</mapper>